{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SylvainStak\\\\Desktop\\\\Developer_Assessment\\\\frontend\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.url = \"http://localhost:3900/\";\n    this.state = {\n      students: [],\n      nationalities: [],\n      nationality: null,\n      status: null,\n      sort: 0\n    };\n\n    this.getData = () => {\n      axios.get(this.url + \"getStudents\").then(res => {\n        let options = document.querySelector('#nationalities').options;\n        let nationality = \"\";\n\n        for (let i = 0; i < options.length; i++) {\n          if (options[i].selected) {\n            nationality = options[i].text;\n          }\n        } //Insert all the nationalities into an array\n\n\n        let allNations = [];\n        let allStudents = [];\n        res.data.students.forEach(student => {\n          allNations.push(student.nationality);\n          if (student.nationality === nationality) allStudents.push(`${student.firstName} ${student.lastName} (${student.age})`);\n        }); //The filter method here goes through all the nations of the students and \n        //only store the ones that are different in the \"nationList\" Array\n\n        let nationList = allNations.filter((nation, index) => allNations.indexOf(nation) === index).sort();\n        this.setState({\n          students: allStudents.sort(),\n          nationalities: nationList,\n          nationality: nationality,\n          status: 'success'\n        });\n        console.log(this.state);\n      });\n    };\n\n    this.sortStudents = () => {\n      let sortedStudents = this.state.students.reverse();\n      this.setState({\n        students: sortedStudents\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.getData();\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    /**\r\n     * Generates students as divs with its first name, last name and age\r\n     */\n    var listStudents = this.state.students.map((student, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 border border-success rounded mb-1 mt-1 bg-light pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, student)));\n    });\n    /**\r\n     * Generates nationalities as options\r\n     */\n\n    var listNationalities = this.state.nationalities.map((nation, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, nation);\n    });\n    return React.createElement(\"div\", {\n      className: \"container mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      id: \"nationalities\",\n      onChange: this.getData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, listNationalities), React.createElement(\"div\", {\n      className: \"mt-2 border border-primary pr-5 pl-5 pb-2 pt-2 rounded bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, listStudents), React.createElement(\"button\", {\n      className: \"btn mt-2 px-5 text-light border border-dark\",\n      onClick: this.sortStudents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Sort\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/SylvainStak/Desktop/Developer_Assessment/frontend/src/components/Home.js"],"names":["React","Component","axios","Home","url","state","students","nationalities","nationality","status","sort","getData","get","then","res","options","document","querySelector","i","length","selected","text","allNations","allStudents","data","forEach","student","push","firstName","lastName","age","nationList","filter","nation","index","indexOf","setState","console","log","sortStudents","sortedStudents","reverse","componentWillMount","componentDidMount","render","listStudents","map","listNationalities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component{\r\n    url = \"http://localhost:3900/\";\r\n\r\n    state = {\r\n        students: [],\r\n        nationalities: [],\r\n        nationality: null,\r\n        status: null,\r\n        sort: 0\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.getData();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        axios.get(this.url + \"getStudents\")\r\n        .then(res => {\r\n            let options = document.querySelector('#nationalities').options;\r\n            let nationality = \"\";\r\n\r\n            \r\n            for (let i = 0; i < options.length; i++) {\r\n                if(options[i].selected){\r\n                    nationality = options[i].text;\r\n                } \r\n            }\r\n\r\n            //Insert all the nationalities into an array\r\n            let allNations = [];\r\n            let allStudents = [];\r\n\r\n            res.data.students.forEach(student => {\r\n                allNations.push(student.nationality);\r\n                if(student.nationality === nationality)\r\n                    allStudents.push(`${student.firstName} ${student.lastName} (${student.age})`);\r\n            });\r\n\r\n            //The filter method here goes through all the nations of the students and \r\n            //only store the ones that are different in the \"nationList\" Array\r\n            let nationList = allNations.filter((nation, index) => allNations.indexOf(nation) === index).sort();\r\n\r\n            this.setState({\r\n                students: allStudents.sort(),\r\n                nationalities: nationList,\r\n                nationality: nationality,\r\n                status: 'success'\r\n            });\r\n\r\n            console.log(this.state);\r\n        });\r\n    }\r\n\r\n    sortStudents = () => {\r\n        let sortedStudents = this.state.students.reverse();\r\n        this.setState({\r\n            students: sortedStudents\r\n        });\r\n    }\r\n\r\n    render(){   \r\n        /**\r\n         * Generates students as divs with its first name, last name and age\r\n         */        \r\n        var listStudents = this.state.students.map((student, index) => {\r\n            return(\r\n                <div key={index} className=\"row\">\r\n                    <div className=\"col-12 border border-success rounded mb-1 mt-1 bg-light pt-2\">\r\n                        <p className=\"text-center\">{student}</p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        /**\r\n         * Generates nationalities as options\r\n         */\r\n        var listNationalities = this.state.nationalities.map((nation, index) => {\r\n            return(\r\n                <option key={index}>\r\n                    {nation}\r\n                </option>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"container mt-2\">\r\n                <select className=\"form-control\" id=\"nationalities\" onChange={this.getData}>\r\n                    {listNationalities}\r\n                </select>\r\n                <div className=\"mt-2 border border-primary pr-5 pl-5 pb-2 pt-2 rounded bg-primary\">\r\n                    {listStudents}\r\n                </div>\r\n                <button className=\"btn mt-2 px-5 text-light border border-dark\" onClick={this.sortStudents}>Sort</button>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}